* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Oswald', sans-serif;
  background-color: rgba(0, 0, 0, 0.986);
  color: lightgray;
}

/* COR DA LOGOTIPO DH E LINHA DO MEIO*/
#p1 {
  color: red;
  font-weight: bolder;
  font-size: 35px;
}

#p2 {
  font-weight: 600;
  font-size: 25px;
}

#linha-vertical {
  margin: 0px 10px;
  position: relative;
  bottom: 5px;
  /* width: 10px; */
  height: 25px;
  border-left: 1px solid red;
}

/* --------------------------------- */

#div1 {
  display: flex;
  align-items: center;
  flex-direction: row;
}

#img1 {
  width: 100%;
  height: 225px;
  background-color: rgb(255, 255, 255);
}

#roll {
  text-decoration: none;
  color: inherit;
}

/* botões do header */
#botao_hover {
  background-color: #212529;
  color: white;
  border: red solid 1px;

}

#botao_hover:hover {
  background-color: white;
  color: black;
  border: white;
}

/* ----------------------------- */

/* ADICIONAR A IMAGEM DO BANNER NO BACKGROUND */



.text-center {
  background-image: url(../img/banner.jpg);
  background-repeat: no-repeat;
  opacity: 80%;
  min-height: 500px;
  background-attachment: fixed;
  background-position: center;
  background-size: cover;
}


.text-center h1 {
  font-weight: bold;
  color: whitesmoke;
  text-shadow: 1px 1px 2px gray;
}

.text-muted {
  color: whitesmoke !important;
  font-size: 25px;
  text-shadow: 1px 1px 2px gray;
}


/* Esse código é só para tirar as margens */
body,
html {
  margin: 0;
  padding: 0;
}

/* Autores Style */

:root {
  --contraste-color: #ff0000;
}

.grid-cards {
  display: grid;
  grid-template-columns: repeat(auto-fill, 370px);
  justify-content: center;
  gap: 2.5rem;
}

.game-card {
  width: 100%;
  border-radius: 0.5rem;
  overflow: hidden;
  background-color: #2f3137;
}

.game-card a {
  position: relative;
  overflow: hidden;
  display: block;
  width: 100%;
  height: 100%;
  max-height: 370px;
  margin-bottom: 0.2rem;
}

.next-release-card {
  border: 1px solid #ff0000;
  background-color: #2f3137;
}


/* Autores */

body {
  min-height: 100vh;
  position: relative;
}

.sobre_conteudo {
  margin-bottom: 2rem;
}

.sobre_conteudo>h2 {
  letter-spacing: .1em;
  padding: 20px;
}

.sobre_conteudo p {
  max-width: 100%;
  font-size: 1.2em;
  padding: 10px;
  text-align: left;
}

.sobre_conteudoFoto {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 2.5rem;
  justify-items: center;
}

.sobre_img {
  height: 100%;
  width: 100%;
  transition: transform .3s ease-in-out;
  object-fit: cover;
}

.linkedin {
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 0;
  background-color: rgba(0, 0, 0, 0.2);
  transition: height 2s ease-in-out;
  color: var(--contraste-color);
}

.linkedin h2 {
  text-decoration: underline;
}

.game-card a {
  height: 200px;
}

.game-card:hover .linkedin {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  height: 100%;
  backdrop-filter: blur(2px);
}
















/*Efeito Parallax na página de about*/

.wrapper {
  /* O elemento precisa ter uma altura definida para o efeito
  funcionar.
     100vh significa 100% da altura da view.
  */
  height: 100vh;

  /* O tamanho das imagens irá criar uma barra de rolagem 
  horizontal. Iremos desativar isso */
  overflow-x: hidden;

  /* A propriedade perspective indica a "distância" entre o 
  usuário e o plano Z.
  Quanto maior o valor, mais perto o elemento estará do usuário.
  Se for um valor negativo,
  mais distante esse elemento estará.
  */
  perspective: 2px;

  /* O transform-style indica se os elementos filhos devem ser 
  transformados em um plano 2D ou 3D.
  O valor preserve-3d indica que os elementos devem seguir o 
  espaço 3D indicado.
  */
  transform-style: preserve-3d;
}

.section {
  /* Indicamos "relative" para depois podermos
  posicionar os elementos filhos com "absolute" */
  position: relative;

  /* Indicamos uma altura para a nossa seção. O valor não 
  importa muito.
  Para garantir um bom efeito, coloquei também uma altura 
  mínima de 700px;
  */
  height: 100vh;
  min-height: 700px;

  /* Para manter a transformação em espaço 3D, indicamos o mesmo 
  valor do elemento pai (preserve-3d).
  Para não precisar repetir o valor "preserve-3d", você pode usar 
  o valor "inherit", que fará
  com que ele pegue o valor do elemento pai.
  */
  transform-style: inherit;
}

.section::before {
  /* Aqui nós iremos configurar a imagem que irá aparecer no fundo
  da seção.
  Como vimos, o Parallax precisa de elementos diferentes, então 
  não daria certo se colocássemos o fundo diretamente na 
  <section>. Então criaremos um pseudo-elemento para isso.
  */

  /* Isso servirá para que o pseudo-elemento possua as mesmas
  dimensões do elemento <section> */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  /* O z-index negativo irá garantir que a imagem não fique por 
  cima de outros elementos */
  z-index: -1;

  /* Aqui estamos fazendo com que a imagem de fundo cubra todo o
  elemento */
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;

  /* Aqui está a brincadeira. Lembra que o nosso "wrapper" está
  mais próximo do usuário?
  Aqui nós faremos com que o nosso pseudo-elemento, que está com
  a imagem de fundo, fique mais longe do usuário. Para isso, 
  basta passar um valor negativo para "translateZ()".
  
  Como a imagem irá para longe do usuário, ela parecerá menor. 
  Então usamos o "scale()" para aumentar o tamanho da imagem.
  
  Como o elemento estará mais longe do usuário, ele irá se mover
  mais lentamente do que os elementos mais próximos conforme 
  a gente role a página.
  */
  transform: translateZ(-1px) scale(1.5);
}

.text {
  /* Essa classe, como dito antes, é só para o nosso conteúdo.
  Sinta-se livre para criar o que quiser.
  */
  position: absolute;
  top: 25%;
  width: 100%;
  padding: 20px 0;
  background-color: rgba(255, 255, 255, 0.5);

  color: white;
  text-shadow: 0 0 5px #000;
  font-size: 20px;
  text-align: center;
}

/* Em nosso pseudo-elemento, configuramos a imagem de fundo,
mas não indicamos qual será a imagem.
  Isso nos permite poder criar outras classes para indicar 
  uma imagem diferente para cada <section>.
*/
.bg1::before {
  background-image: url(../img/cursos.jpg);
}

.bg2::before {
  background-image: url(/img/carreira.jpg);
}

.bg3::before {
  background-image: url(/img/parcerias.jpg);
}





.course {
  background-repeat: no-repeat;
  background-size: 100%;
}

.course-text {
  color: black !important;
}

.course-js {
  background-image: url(../img/javascript-curso.jpg);

}

.course-html {
  background-image: url(../img/html-curso.webp);
  background-size: 250%;

}

.course-css {
  background-image: url(../img/css-curso.png);

}

.course-java {
  background-image: url(../img/java-curso.png);
  background-size: 196%;
}

.course-node {
  background-image: url(../img/node-curso.png);
  background-size: 100%;
}

.course-mysql {
  background-image: url(../img/mysql-curso.jpg);
  background-size: 100% 175%;
}

.fw-light {
  color: antiquewhite
}

footer{
  margin-top: 500px;
}